### Sep 1st


ubuntu@ip-172-31-11-178:~/basedir$ ls -ltr
total 376
-rwxrwxr-x 1 ubuntu ubuntu    665 Dec  6  2022 manage.py
drwxrwxr-x 4 ubuntu ubuntu   4096 Dec 13  2022 venv
-rw-r--r-- 1 ubuntu ubuntu 167936 Dec 16  2022 db.sqlite3.backup
drwxrwxr-x 4 ubuntu ubuntu   4096 May 12 11:00 accounts
drwxrwxr-x 5 ubuntu ubuntu   4096 Jun  3 07:46 static
drwxrwxr-x 3 ubuntu ubuntu   4096 Aug 25 10:19 myproject
drwxrwxr-x 3 ubuntu ubuntu   4096 Aug 25 10:49 templates
drwxrwxr-x 5 ubuntu ubuntu   4096 Aug 25 10:57 boards
-rw-rw-r-- 1 ubuntu ubuntu 188416 Aug 25 10:58 db.sqlite3


GCBV Pagination

boards/views.py will be changed. It will include a new class

class TopicListView(ListView):
    model = Topic
    context_object_name = 'topics'
    template_name = 'topics.html'
    paginate_by = 20

    def get_context_data(self, **kwargs):
        kwargs['board'] = self.board
        return super().get_context_data(**kwargs)

    def get_queryset(self):
        self.board = get_object_or_404(Board, pk=self.kwargs.get('pk'))
        queryset = self.board.topics.order_by('-last_updated').annotate(replies=Count('posts') - 1)
        return queryset



myproject/urls.py URL must be updated too

urlpatterns = [
    # ...
    url(r'^boards/(?P<pk>\d+)/$', views.TopicListView.as_view(), name='board_topics'),
]

change the template templates/topics.html


{% block content %}
  <div class="mb-4">
    <a href="{% url 'new_topic' board.pk %}" class="btn btn-primary">New topic</a>
  </div>

  <table class="table mb-4">
    <!-- table content suppressed -->
  </table>

  {% if is_paginated %}
    <nav aria-label="Topics pagination" class="mb-4">
      <ul class="pagination">
        {% if page_obj.has_previous %}
          <li class="page-item">
            <a class="page-link" href="?page={{ page_obj.previous_page_number }}">Previous</a>
          </li>
        {% else %}
          <li class="page-item disabled">
            <span class="page-link">Previous</span>
          </li>
        {% endif %}

        {% for page_num in paginator.page_range %}
          {% if page_obj.number == page_num %}
            <li class="page-item active">
              <span class="page-link">
                {{ page_num }}
                <span class="sr-only">(current)</span>
              </span>
            </li>
          {% else %}
            <li class="page-item">
              <a class="page-link" href="?page={{ page_num }}">{{ page_num }}</a>
            </li>
          {% endif %}
        {% endfor %}

        {% if page_obj.has_next %}
          <li class="page-item">
            <a class="page-link" href="?page={{ page_obj.next_page_number }}">Next</a>
          </li>
        {% else %}
          <li class="page-item disabled">
            <span class="page-link">Next</span>
          </li>
        {% endif %}
      </ul>
    </nav>
  {% endif %}

{% endblock %}

Start the server and test...

It makes an error

Trying a pattern version of the template

https://gist.githubusercontent.com/vitorfs/65095aa3eda78bafd22d5e2f94086d40/raw/9ec77f2acd51389cf67f6147785c7f51eaf13d99/topics.html

{% extends 'base.html' %}

{% block title %}
  {{ board.name }} - {{ block.super }}
{% endblock %}

{% block breadcrumb %}
  <li class="breadcrumb-item"><a href="{% url 'home' %}">Boards</a></li>
  <li class="breadcrumb-item active">{{ board.name }}</li>
{% endblock %}

{% block content %}
  <div class="mb-4">
    <a href="{% url 'new_topic' board.pk %}" class="btn btn-primary">New topic</a>
  </div>

  <table class="table mb-4">
    <thead class="thead-inverse">
      <tr>
        <th>Topic</th>
        <th>Starter</th>
        <th>Replies</th>
        <th>Views</th>
        <th>Last Update</th>
      </tr>
    </thead>
    <tbody>
      {% for topic in topics %}
        <tr>
          <td><a href="{% url 'topic_posts' board.pk topic.pk %}">{{ topic.subject }}</a></td>
          <td>{{ topic.starter.username }}</td>
          <td>{{ topic.replies }}</td>
          <td>{{ topic.views }}</td>
          <td>{{ topic.last_updated }}</td>
        </tr>
      {% endfor %}
    </tbody>
  </table>

  {% if is_paginated %}
    <nav aria-label="Topics pagination" class="mb-4">
      <ul class="pagination">
        {% if page_obj.has_previous %}
          <li class="page-item">
            <a class="page-link" href="?page={{ page_obj.previous_page_number }}">Previous</a>
          </li>
        {% else %}
          <li class="page-item disabled">
            <span class="page-link">Previous</span>
          </li>
        {% endif %}

        {% for page_num in paginator.page_range %}
          {% if page_obj.number == page_num %}
            <li class="page-item active">
              <span class="page-link">
                {{ page_num }}
                <span class="sr-only">(current)</span>
              </span>
            </li>
          {% else %}
            <li class="page-item">
              <a class="page-link" href="?page={{ page_num }}">{{ page_num }}</a>
            </li>
          {% endif %}
        {% endfor %}

        {% if page_obj.has_next %}
          <li class="page-item">
            <a class="page-link" href="?page={{ page_obj.next_page_number }}">Next</a>
          </li>
        {% else %}
          <li class="page-item disabled">
            <span class="page-link">Next</span>
          </li>
        {% endif %}
      </ul>
    </nav>
  {% endif %}

{% endblock %}

This works, but no pagination buttons

Reusable Pagination Template


boards/views.py

Change the class

class PostListView(ListView):
    model = Post
    context_object_name = 'posts'
    template_name = 'topic_posts.html'
    paginate_by = 2

    def get_context_data(self, **kwargs):
        self.topic.views += 1
        self.topic.save()
        kwargs['topic'] = self.topic
        return super().get_context_data(**kwargs)

    def get_queryset(self):
        self.topic = get_object_or_404(Topic, board__pk=self.kwargs.get('pk'), pk=self.kwargs.get('topic_pk'))
        queryset = self.topic.posts.order_by('created_at')
        return queryset


Now update the urls.py

urlpatterns = [
    # ...
    url(r'^boards/(?P<pk>\d+)/topics/(?P<topic_pk>\d+)/$', views.PostListView.as_view(), name='topic_posts'),
]

templates/includes/pagination.html

{% if is_paginated %}
  <nav aria-label="Topics pagination" class="mb-4">
    <ul class="pagination">
      {% if page_obj.has_previous %}
        <li class="page-item">
          <a class="page-link" href="?page={{ page_obj.previous_page_number }}">Previous</a>
        </li>
      {% else %}
        <li class="page-item disabled">
          <span class="page-link">Previous</span>
        </li>
      {% endif %}

      {% for page_num in paginator.page_range %}
        {% if page_obj.number == page_num %}
          <li class="page-item active">
            <span class="page-link">
              {{ page_num }}
              <span class="sr-only">(current)</span>
            </span>
          </li>
        {% else %}
          <li class="page-item">
            <a class="page-link" href="?page={{ page_num }}">{{ page_num }}</a>
          </li>
        {% endif %}
      {% endfor %}

      {% if page_obj.has_next %}
        <li class="page-item">
          <a class="page-link" href="?page={{ page_obj.next_page_number }}">Next</a>
        </li>
      {% else %}
        <li class="page-item disabled">
          <span class="page-link">Next</span>
        </li>
      {% endif %}
    </ul>
  </nav>
{% endif %}


templates/topic_posts.html

 {% endfor %}

  {% include 'includes/pagination.html' %}

{% endblock %}


templates/topics.html

{% block content %}
  <div class="mb-4">
    <a href="{% url 'new_topic' board.pk %}" class="btn btn-primary">New topic</a>
  </div>

  <table class="table mb-4">
    <!-- table code suppressed -->
  </table>

  {% include 'includes/pagination.html' %}

{% endblock %}


?????????? No pagination!!!

### September 15th

Is pagination working?

http://3.68.85.218:8000/

MarySmith
qwerty_12345

Pagination doesn't work, only the first page is displayed

Files that may be wrong....

boards/views.py
urls.py
templates/includes/pagination.html
templates/topic_posts.html

Let's set them to the pattern, provided in the tutorial
https://simpleisbetterthancomplex.com/series/2017/10/09/a-complete-beginners-guide-to-django-part-6.html#reusable-pagination-template

After updating the first file and trying to start server
File "/home/ubuntu/myproject/myproject/myproject/urls.py", line 24, in <module>
    path('', views.home, name="home"),
AttributeError: module 'boards.views' has no attribute 'home'

urlpatterns = [
  # path('', views.home, name="home"), #Sep 15th

File "/home/ubuntu/myproject/myproject/myproject/urls.py", line 25, in <module>
    path('newhome/', views.newhome, name='newhome'),
AttributeError: module 'boards.views' has no attribute 'newhome'

After commenting out outdated (???) urls, pagination starts working...

But:

When attempting to reach http://3.68.85.218:8000/boards/1/topics/3/

Error during template rendering
In template /home/ubuntu/myproject/myproject/templates/topic_posts.html, error at line 56

Bringing /home/ubuntu/myproject/myproject/templates/topic_posts.html to the pattern content as privided in the tutorial

Now things work, but user icons do not load....

Because the link to avatar is different?
<img src="{% static 'img/circle_face_human_profile_icon.png' %}"


Yes, the avatar picture now loads OK!!

paginate_by in boards/views.py

class TopicListView(ListView):
    model = Topic
    context_object_name = 'topics'
    template_name = 'topics.html'
    paginate_by = 5 #### !!!


Pagination still doesn't work in http://3.68.85.218:8000/boards/1/topics/3/


Still to fix this! 
But generally, pagination works OK!

Despite all the changes, pagination isn't working for topic_posts.html !!! ????


NEXT:
My Account View

And down to the end of section Class-Based Views

Next after this comes the most interesting part:
DEPLOYMENT of production environment

PostgreSQL, Nginx, Gunicorn... Email Service, HTTPS


NEXT:
My Account View

1. Modify accounts/views.py

A new class must be defined and included
@method_decorator(login_required, name='dispatch')
class UserUpdateView(UpdateView):
    model = User
    fields = ('first_name', 'last_name', 'email', )
    template_name = 'my_account.html'
    success_url = reverse_lazy('my_account')

    def get_object(self):
        return self.request.user

2. Modify myproject/urls.py

url(r'^settings/account/$', accounts_views.UserUpdateView.as_view(), name='my_account'),
]


3. Adding a new HTML file

templates/my_account.html does not exist and should be created

{% extends 'base.html' %}

{% block title %}My account{% endblock %}

{% block breadcrumb %}
  <li class="breadcrumb-item active">My account</li>
{% endblock %}

{% block content %}
  <div class="row">
    <div class="col-lg-6 col-md-8 col-sm-10">
      <form method="post" novalidate>
        {% csrf_token %}
        {% include 'includes/form.html' %}
        <button type="submit" class="btn btn-success">Save changes</button>
      </form>
    </div>
  </div>
{% endblock %}



We also edited base.html to include link to /settings/account/ to user menu!

http://3.68.85.218:8000/

is still available for a user who is logged out!!

login required????

Yes, after adding 

@method_decorator(login_required, name='dispatch') #Sep 15th
class BoardListView(ListView):
    model = Board
    context_object_name = 'boards'
    template_name = 'home.html'

no user can view the home page unless they are logged in!

## Sep 22nd

http://3.68.85.218:8000/

ssh djangoboards

How do we change pagination settings?

paginate_by in boards/views.py

class TopicListView(ListView):
    model = Topic
    context_object_name = 'topics'
    template_name = 'topics.html'
    paginate_by = 5 #### !!!


Adding Markdown
First, let’s install a library called Python-Markdown:

pip install markdown

python was Python 2.7
python3 was Python 3.X

pip --version
pip 22.3.1 from /home/ubuntu/myproject/myproject/venv/lib/python3.8/site-packages/pip (python 3.8)

pip install markdown
Do this when Virtual Environment is activated

pip install markdown
Collecting markdown
  Downloading Markdown-3.4.4-py3-none-any.whl (94 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 94.2/94.2 kB 10.7 MB/s eta 0:00:00
Collecting importlib-metadata>=4.4
  Downloading importlib_metadata-6.8.0-py3-none-any.whl (22 kB)
Collecting zipp>=0.5
  Downloading zipp-3.17.0-py3-none-any.whl (7.4 kB)
Installing collected packages: zipp, importlib-metadata, markdown
Successfully installed importlib-metadata-6.8.0 markdown-3.4.4 zipp-3.17.0

We can add a new method to the Post model:

boards/models.py

from django.db import models
from django.utils.html import mark_safe
from markdown import markdown

class Post(models.Model):
    # ...

    def get_message_as_markdown(self):
        return mark_safe(markdown(self.message, safe_mode='escape'))


Now in the templates topic_posts.html and reply_topic.html just change from:

{{ post.message }}
To:

{{ post.get_message_as_markdown }}

From now on the users can already use markdown in the posts:

We can do much more than that

Markdown Editor

We can also add a very cool Markdown editor called SimpleMD.

Either download the JavaScript library or use their CDN:
<link rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css">
<script src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script>

templates/base.htm

<script src="{% static 'js/jquery-3.2.1.min.js' %}"></script>
    <script src="{% static 'js/popper.min.js' %}"></script>
    <script src="{% static 'js/bootstrap.min.js' %}"></script>
    {% block javascript %}{% endblock %}  <!-- Add this empty block here! -->


First edit the reply_topic.html template

templates/reply_topic.html

{% extends 'base.html' %}

{% load static %}

{% block title %}Post a reply{% endblock %}

{% block stylesheet %}
  <link rel="stylesheet" href="{% static 'css/simplemde.min.css' %}">
{% endblock %}

{% block javascript %}
  <script src="{% static 'js/simplemde.min.js' %}"></script>
  <script>
    var simplemde = new SimpleMDE();
  </script>
{% endblock %}

NOT Finished This!!!!

Markdown Editor Not working!!!!



