
VPS restarted today on May 11th

3.68.85.218
172.31.11.178

ssh -i Paramiko.pem ubuntu@3.68.85.218

Everything works!

Look into files updated today. All is seen from there!


ALLOWED_HOSTS = ['ec2-3-68-112-65.eu-central-1.compute.amazonaws.com', '3.68.112.65', '3.68.85.218']
Should contain real up-to-date domain names or IP addresses

The next problem to fix was with SignUp Page

-rw-rw-r-- 1 ubuntu ubuntu  760 May 11 13:04 views.py

(venv) ubuntu@ip-172-31-11-178:~/myproject/myproject$ cat accounts/views.py 
from django.contrib.auth import login as auth_login
from django.shortcuts import render, redirect
from django.contrib.auth.forms import UserCreationForm

# Create your views here.

#def signup(request):
#    #return render(request, 'signup.html')
#    form = UserCreationForm()
#    return render(request, 'signup.html', {'form': form})

def signup(request):
    print("Signup started")
    if request.method == 'POST':
        form = UserCreationForm(request.POST)
        print(form)
        if form.is_valid():
            print("Form is valid")
            user = form.save()
            auth_login(request, user)
            return redirect('home')
    else:
        form = UserCreationForm()
    return render(request, 'signup.html', {'form': form})


## home is the view function name that should be activated in case the redirect works

urlpatterns = [
   path('', views.home, name="home"),
   path('newhome/', views.newhome, name='newhome'),
   path('oldhome/', views.home, name='home'),
   path('admin/', admin.site.urls),
   re_path(r'^signup/$', accounts_views.signup, name='signup'),
   re_path(r'^boards/(?P<pk>\d+)/$', views.board_topics, name='board_topics'),
   re_path(r'^boards/(?P<pk>\d+)/new/$', views.new_topic, name='new_topic'),
   ]


Passwords must be long enough, contain symbols and digits etc...

sqlite3 db.sqlite3
select * from auth_user;

Will show that the new used was successfully added to our database

Reference to Authenticated User in the Template

We need to change templates/base.html

Currently this file has:

ubuntu@ip-172-31-11-178:~/myproject/myproject$ cat templates/base.html 
{% load static %}<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>{% block title %}Django Boards{% endblock %}</title>
    <link rel="stylesheet" type="text/css" href="{% static 'css/app.css' %}">
    <link rel="stylesheet" href="{% static 'css/bootstrap.min.css' %}">
    <!-- <style>.navbar-brand {font-family: 'Gloock', serif;}</style> -->
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Gloock&display=swap');
    </style>
    {% block stylesheet %}{% endblock %}  <!-- HERE -->
  </head>

  <body>
    {% block body %}  <!-- HERE -->
      <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
          <a class="navbar-brand" href="{% url 'home' %}">Django Boards</a>
        </div>
      </nav>
      <div class="container">
        <ol class="breadcrumb my-4">
          {% block breadcrumb %}
          {% endblock %}
        </ol>
        {% block content %}
        {% endblock %}
      </div>
    {% endblock body %}  <!-- AND HERE -->
  </body>
</html>


Change it to:
{% block body %}
  <nav class="navbar navbar-expand-sm navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="{% url 'home' %}">Django Boards</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#mainMenu" aria-controls="mainMenu" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="mainMenu">
        <ul class="navbar-nav ml-auto">
          <li class="nav-item">
            <a class="nav-link" href="#">{{ user.username }}</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container">
    <ol class="breadcrumb my-4">
      {% block breadcrumb %}
      {% endblock %}
    </ol>
    {% block content %}
    {% endblock %}
  </div>
{% endblock body %}

The header and the footer parts from the OLD base.html should NOT be forgotten and added

Everything works, and the current user name is displayed!



Adding the Email Field to the Form

Create a file named forms.py inside the accounts folder

accounts/forms.py

from django import forms
from django.contrib.auth.forms import UserCreationForm
from django.contrib.auth.models import User

class SignUpForm(UserCreationForm):
    email = forms.CharField(max_length=254, required=True, widget=forms.EmailInput())
    class Meta:
        model = User
        fields = ('username', 'email', 'password1', 'password2')


Change accounts/views.py

Currently it has:

from django.contrib.auth import login as auth_login
from django.shortcuts import render, redirect
from django.contrib.auth.forms import UserCreationForm

# Create your views here.

#def signup(request):
#    #return render(request, 'signup.html')
#    form = UserCreationForm()
#    return render(request, 'signup.html', {'form': form})

def signup(request):
    print("Signup started")
    if request.method == 'POST':
        form = UserCreationForm(request.POST)
        print(form)
        if form.is_valid():
            print("Form is valid")
            user = form.save()
            auth_login(request, user)
            return redirect('home')
    else:
        form = UserCreationForm()
    return render(request, 'signup.html', {'form': form})


It should contain:

from django.contrib.auth import login as auth_login
from django.shortcuts import render, redirect

from accounts.forms import SignUpForm

def signup(request):
    if request.method == 'POST':
        form = SignUpForm(request.POST)
        if form.is_valid():
            user = form.save()
            auth_login(request, user)
            return redirect('home')
    else:
        form = SignUpForm()
    return render(request, 'signup.html', {'form': form})


This works!

Logout and Login will be our next topics!

## May 19th

Using GIT for version control?
https://www.freecodecamp.org/news/get-started-with-version-control-and-git/

Created .gitignore

git init
git add .

git commit -m "First commit May 19th"


ubuntu@ip-172-31-11-178:~/myproject/myproject$ git log
commit 97c432e8ec5181e1772876256c486f4a6d3406ff (HEAD -> master)
Author: Ubuntu <ubuntu@ip-172-31-11-178.eu-central-1.compute.internal>
Date:   Fri May 19 10:25:56 2023 +0000

    First commit May 19th
ubuntu@ip-172-31-11-178:~/myproject/myproject$ 

ubuntu@ip-172-31-11-178:~/myproject/myproject$ git shortlog
Ubuntu (1):
      First commit May 19th

ubuntu@ip-172-31-11-178:~/myproject/myproject$ git log --oneline
97c432e (HEAD -> master) First commit May 19th

ubuntu@ip-172-31-11-178:~/myproject/myproject$ nano gittest.txt

Hard reset

git reset --hard HEAD~1

ubuntu@ip-172-31-11-178:~/myproject/myproject$ git reset --hard HEAD~1
HEAD is now at d9d4050 Second commit May 19th

ubuntu@ip-172-31-11-178:~/myproject/myproject$ git reset --hard HEAD~1
HEAD is now at 97c432e First commit May 19th

ubuntu@ip-172-31-11-178:~/myproject/myproject$ cat gittest.txt 
cat: gittest.txt: No such file or directory

Improving the Sign Up Template

Create img directory inside static


wget https://www.toptal.com/designers/subtlepatterns/uploads/paisley.png

Then after that, create a new CSS file named accounts.css in the static/css.

static/css/accounts.css

body {
  background-image: url(../img/paisley.png);
}

.logo {
  font-family: 'Peralta', cursive;
}

.logo a {
  color: rgba(0,0,0,.9);
}

.logo a:hover,
.logo a:active {
  text-decoration: none;
}

Change templates/signup.html

{% extends 'base.html' %}

{% load static %}

{% block stylesheet %}
  <link rel="stylesheet" href="{% static 'css/accounts.css' %}">
{% endblock %}

{% block body %}
  <div class="container">
    <h1 class="text-center logo my-4">
      <a href="{% url 'home' %}">Django Boards</a>
    </h1>
    <div class="row justify-content-center">
      <div class="col-lg-8 col-md-10 col-sm-12">
        <div class="card">
          <div class="card-body">
            <h3 class="card-title">Sign up</h3>
            <form method="post" novalidate>
              {% csrf_token %}
              {% include 'includes/form.html' %}
              <button type="submit" class="btn btn-primary btn-block">Create an account</button>
            </form>
          </div>
          <div class="card-footer text-muted text-center">
            Already have an account? <a href="#">Log in</a>
          </div>
        </div>
      </div>
    </div>
  </div>
{% endblock %}

The background works, but the font doesn't seem to work properly


## May 29th

It works!

In base.html

{% load static %}<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>{% block title %}Django Boards{% endblock %}</title>
    <link rel="stylesheet" type="text/css" href="{% static 'css/app.css' %}">
    <link rel="stylesheet" href="{% static 'css/bootstrap.min.css' %}">
    <!-- <style>.navbar-brand {font-family: 'Gloock', serif;}</style> -->
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Gloock&display=swap');
    @import url('https://fonts.googleapis.com/css2?family=Peralta&display=swap');
    </style>
    {% block stylesheet %}{% endblock %}  <!-- HERE -->
  </head>

  <body>

.............

Then CSS works:
accounts.css

body {
  background-image: url(../img/paisley.png);
}

.logo {
  font-family: 'Peralta', cursive;
}

.logo a {
  color: rgba(0,0,0,.9);
}

.logo a:hover,
.logo a:active {
  text-decoration: none;
}


Logout

myproject/urls.py

Currently this file holds:

 cat myproject/urls.py 

from django.contrib import admin
from django.urls import path
from django.urls import re_path
from boards import views
from accounts import views as accounts_views


urlpatterns = [
   path('', views.home, name="home"),
   path('newhome/', views.newhome, name='newhome'),
   path('oldhome/', views.home, name='home'),
   path('admin/', admin.site.urls),
   re_path(r'^signup/$', accounts_views.signup, name='signup'),
   re_path(r'^boards/(?P<pk>\d+)/$', views.board_topics, name='board_topics'),
   re_path(r'^boards/(?P<pk>\d+)/new/$', views.new_topic, name='new_topic'),
   ]


One line must be added - what to do if user wants to log out of the system

from django.conf.urls import url
from django.contrib import admin
from django.contrib.auth import views as auth_views

from accounts import views as accounts_views
from boards import views

urlpatterns = [
    url(r'^$', views.home, name='home'),
    url(r'^signup/$', accounts_views.signup, name='signup'),
    url(r'^logout/$', auth_views.LogoutView.as_view(), name='logout'),
    url(r'^boards/(?P<pk>\d+)/$', views.board_topics, name='board_topics'),
    url(r'^boards/(?P<pk>\d+)/new/$', views.new_topic, name='new_topic'),
    url(r'^admin/', admin.site.urls),
]

This worked! Any user can log out!


Open the settings.py file and add the LOGOUT_REDIRECT_URL variable to the bottom of the file:

myproject/settings.py

LOGOUT_REDIRECT_URL = 'home'


Displaying Menu For Authenticated Users


First, go to jquery.com/download/ and download the compressed, production jQuery 3.2.1 version.

Inside the static folder, create a new folder named js. Copy the jquery-3.2.1.min.js file to there.

Bootstrap 4 also needs a library called Popper to work. Go to popper.js.org and download the latest version.

https://unpkg.com/@popperjs/core@2

https://unpkg.com/@popperjs/core@2.11.8/dist/umd/popper.min.js

Also add Bootstrap

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js" integrity="sha384-zYPOMqeu1DAVkHiLqWBUTcbYfZ8osu1Nd6Z89ify25QV9guujx43ITvfi12/QExE" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.min.js" integrity="sha384-Y4oOpwW3duJdCWv5ly8SCFYWqFDsfob/3GkgExXKV4idmbt98QcxXYs9UoXAB7BZ" crossorigin="anonymous"></script>


## June, 3rd

ssh djangoboards

using .ssh/config

Host djangoboards
    HostName 3.68.85.218
    User ubuntu
    Port 22
    IdentityFile ~/.ssh/Paramiko.pem


https://www.howtogeek.com/287014/how-to-create-and-use-symbolic-links-aka-symlinks-on-linux/

There are soft links and hard links

Soft links are aliases to original paths
Hard links are alternative names for the same disk locations.

Hard links do not work for directories
Soft links work for files and directories

ln -s /path/to/original /path/to/link


ubuntu@ip-172-31-11-178:~$ cat sample.txt 
This is a sample file to test links.
ubuntu@ip-172-31-11-178:~$ ln ~/sample.txt firstlink

ubuntu@ip-172-31-11-178:~$ ls -ltr
..............
-rw-rw-r--  3 ubuntu ubuntu      78 Jun  3 07:19 secondlink
-rw-rw-r--  3 ubuntu ubuntu      78 Jun  3 07:19 sample.txt
-rw-rw-r--  3 ubuntu ubuntu      78 Jun  3 07:19 firstlink


ubuntu@ip-172-31-11-178:~$ ln -s  ~/sample.txt softlink1

ubuntu@ip-172-31-11-178:~$ ls -ltr
.........
-rw-rw-r--  3 ubuntu ubuntu      78 Jun  3 07:19 secondlink
-rw-rw-r--  3 ubuntu ubuntu      78 Jun  3 07:19 sample.txt
-rw-rw-r--  3 ubuntu ubuntu      78 Jun  3 07:19 firstlink
lrwxrwxrwx  1 ubuntu ubuntu      23 Jun  3 07:22 softlink1 -> /home/ubuntu/sample.txt

ubuntu@ip-172-31-11-178:~$ ls -ltr
........
lrwxrwxrwx  1 ubuntu ubuntu      23 Jun  3 07:22 softlink1 -> /home/ubuntu/sample.txt
-rw-rw-r--  3 ubuntu ubuntu     128 Jun  3 07:24 secondlink
-rw-rw-r--  3 ubuntu ubuntu     128 Jun  3 07:24 sample.txt
-rw-rw-r--  3 ubuntu ubuntu     128 Jun  3 07:24 firstlink

ubuntu@ip-172-31-11-178:~$ rm secondlink

ubuntu@ip-172-31-11-178:~$ ls -ltr
.......

lrwxrwxrwx  1 ubuntu ubuntu      23 Jun  3 07:22 softlink1 -> /home/ubuntu/sample.txt
-rw-rw-r--  2 ubuntu ubuntu     128 Jun  3 07:24 sample.txt
-rw-rw-r--  2 ubuntu ubuntu     128 Jun  3 07:24 firstlink



ubuntu@ip-172-31-11-178:~$ mv sample.txt testdir/

ubuntu@ip-172-31-11-178:~$ ln testdir/ testlink
ln: testdir/: hard link not allowed for directory

ln -s testdir/ testlink

ubuntu@ip-172-31-11-178:~$ cd myproject/myproject/static/
ubuntu@ip-172-31-11-178:~/myproject/myproject/static$ ls ~/templates
base.html      home.html  listboards.html      new_topic.debug.html  signup.html  topics.old.html
base.old.html  includes   listboards.old.html  new_topic.html        topics.html  welcome.html

https://www.howtogeek.com/287014/how-to-create-and-use-symbolic-links-aka-symlinks-on-linux/



## June 10th

ssh djangoboards

ubuntu@ip-172-31-11-178:~$ cd basedir
ubuntu@ip-172-31-11-178:~/basedir$ ls -ltr
total 356
-rwxrwxr-x 1 ubuntu ubuntu    665 Dec  6  2022 manage.py
drwxrwxr-x 4 ubuntu ubuntu   4096 Dec 13 11:06 venv
-rw-r--r-- 1 ubuntu ubuntu 167936 Dec 16 06:53 db.sqlite3.backup
drwxrwxr-x 4 ubuntu ubuntu   4096 Apr 14 11:40 boards
drwxrwxr-x 4 ubuntu ubuntu   4096 May 12 11:00 accounts
drwxrwxr-x 3 ubuntu ubuntu   4096 May 29 07:21 templates
-rw-r--r-- 1 ubuntu ubuntu 167936 May 29 07:39 db.sqlite3
drwxrwxr-x 3 ubuntu ubuntu   4096 May 29 07:42 myproject
drwxrwxr-x 5 ubuntu ubuntu   4096 Jun  3 07:46 static



## added on May 29th
LOGOUT_REDIRECT_URL = 'home'


Displaying Menu For Authenticated Users

Changes to templates/base.html 


{% load static %}<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>{% block title %}Django Boards{% endblock %}</title>
    <link rel="stylesheet" type="text/css" href="{% static 'css/app.css' %}">
    <link rel="stylesheet" href="{% static 'css/bootstrap.min.css' %}">
    <!-- <style>.navbar-brand {font-family: 'Gloock', serif;}</style> -->
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Gloock&display=swap');
    @import url('https://fonts.googleapis.com/css2?family=Peralta&display=swap');
    </style>
    {% block stylesheet %}{% endblock %}  <!-- HERE -->
  </head>

  <body>


{% block body %}
  <nav class="navbar navbar-expand-sm navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="{% url 'home' %}">Django Boards</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#mainMenu" aria-controls="mainMenu" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="mainMenu">
        <ul class="navbar-nav ml-auto">
          <li class="nav-item">
            <a class="nav-link" href="#">{{ user.username }}</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container">
    <ol class="breadcrumb my-4">
      {% block breadcrumb %}
      {% endblock %}
    </ol>
    {% block content %}
    {% endblock %}
  </div>
{% endblock body %}
</body>


Add some new lines

{% load static %}<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>{% block title %}Django Boards{% endblock %}</title>
    <link href="https://fonts.googleapis.com/css?family=Peralta" rel="stylesheet">
    <link rel="stylesheet" href="{% static 'css/bootstrap.min.css' %}">
    <link rel="stylesheet" href="{% static 'css/app.css' %}">
    {% block stylesheet %}{% endblock %}
  </head>
  <body>
    {% block body %}
    <!-- code suppressed for brevity -->
    {% endblock body %}
    <script src="{% static 'js/jquery-3.2.1.min.js' %}"></script>
    <script src="{% static 'js/popper.min.js' %}"></script>
    <script src="{% static 'js/bootstrap.min.js' %}"></script>
  </body>
</html>


Now changes to navigation bar section

Currently it has
<nav class="navbar navbar-expand-sm navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="{% url 'home' %}">Django Boards</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#mainMenu" aria-controls="mainMenu" aria-expanded="false" aria-lab>
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="mainMenu">
        <ul class="navbar-nav ml-auto">
          <li class="nav-item">
            <a class="nav-link" href="#">{{ user.username }}</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>


It should be:

<nav class="navbar navbar-expand-sm navbar-dark bg-dark">
  <div class="container">
    <a class="navbar-brand" href="{% url 'home' %}">Django Boards</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#mainMenu" aria-controls="mainMenu" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="mainMenu">
      <ul class="navbar-nav ml-auto">
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="userMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            {{ user.username }}
          </a>
          <div class="dropdown-menu dropdown-menu-right" aria-labelledby="userMenu">
            <a class="dropdown-item" href="#">My account</a>
            <a class="dropdown-item" href="#">Change password</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="{% url 'logout' %}">Log out</a>
          </div>
        </li>
      </ul>
    </div>
  </div>
</nav>


Improving the code to display buttons even if user is logged out

<nav class="navbar navbar-expand-sm navbar-dark bg-dark">
  <div class="container">
    <a class="navbar-brand" href="{% url 'home' %}">Django Boards</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#mainMenu" aria-controls="mainMenu" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="mainMenu">
      {% if user.is_authenticated %}
        <ul class="navbar-nav ml-auto">
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="userMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              {{ user.username }}
            </a>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="userMenu">
              <a class="dropdown-item" href="#">My account</a>
              <a class="dropdown-item" href="#">Change password</a>
              <div class="dropdown-divider"></div>
              <a class="dropdown-item" href="{% url 'logout' %}">Log out</a>
            </div>
          </li>
        </ul>
      {% else %}
        <form class="form-inline ml-auto">
          <a href="#" class="btn btn-outline-secondary">Log in</a>
          <a href="{% url 'signup' %}" class="btn btn-primary ml-2">Sign up</a>
        </form>
      {% endif %}
    </div>
  </div>
</nav>

After that Sign Up button works and links to http://3.68.85.218:8000/signup/

Log In not implemented yet!


Log IN

New URL must be added

myproject/urls.py

url(r'^login/$', auth_views.LoginView.as_view(template_name='login.html'), name='login'),

myproject/settings.py

LOGIN_REDIRECT_URL = 'home'

templates/base.html

<a href="{% url 'login' %}" class="btn btn-outline-secondary">Log in</a>

create a template similar to the sign up page. Create a new file named login.html:

templates/login.html NEW FILE!!!

{% extends 'base.html' %}

{% load static %}

{% block stylesheet %}
  <link rel="stylesheet" href="{% static 'css/accounts.css' %}">
{% endblock %}

{% block body %}
  <div class="container">
    <h1 class="text-center logo my-4">
      <a href="{% url 'home' %}">Django Boards</a>
    </h1>
    <div class="row justify-content-center">
      <div class="col-lg-4 col-md-6 col-sm-8">
        <div class="card">
          <div class="card-body">
            <h3 class="card-title">Log in</h3>
            <form method="post" novalidate>
              {% csrf_token %}
              {% include 'includes/form.html' %}
              <button type="submit" class="btn btn-primary btn-block">Log in</button>
            </form>
          </div>
          <div class="card-footer text-muted text-center">
            New to Django Boards? <a href="{% url 'signup' %}">Sign up</a>
          </div>
        </div>
        <div class="text-center py-2">
          <small>
            <a href="#" class="text-muted">Forgot your password?</a>
          </small>
        </div>
      </div>
    </div>
  </div>


{% endblock %}


As a result:

We can log in and log out as MarySmith
with qwerty_12345

But the dropdown menu does not work....

Fix the menu!!!

<div class="dropdown-menu dropdown-menu-right" aria-labelledby="userMenu">
              <a class="dropdown-item" href="#">My account</a>
              <a class="dropdown-item" href="#">Change password</a>
              <div class="dropdown-divider"></div>
              <a class="dropdown-item" href="{% url 'logout' %}">Log out</a>
            </div>



### June 16th

update, upgrade, reboot

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>

"GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 404 1827

(venv) ubuntu@ip-172-31-11-178:~/basedir$ ls -ltr static/js/
total 168
-rw-rw-r-- 1 ubuntu ubuntu 20122 May 26 17:27 popper.min.js
-rw-rw-r-- 1 ubuntu ubuntu 87462 May 29 07:54 jquery-3.7.0.min.js
-rw-rw-r-- 1 ubuntu ubuntu 60505 May 29 08:01 bootstrap.min.js

????????

https://www.w3schools.com/bootstrap4/bootstrap_dropdowns.asp


Rolling back to non-working, wrong version

git reset --hard HEAD~1

(venv) ubuntu@ip-172-31-11-178:~/basedir$ git reset --hard HEAD~1
HEAD is now at 7e47d25 June 10th login/logout working, but not the menu!

"GET /static/js/jquery-3.2.1.min.js HTTP/1.1" 404 1827

-rw-rw-r-- 1 ubuntu ubuntu 87462 May 29 07:54 jquery-3.7.0.min.js

https://www.w3schools.com/bootstrap4/tryit.asp?filename=trybs_dropdown-menu&stacked=h

templates/base.html

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>

Log In Non Field Errors

No messages in case of wrong login credentials!

That’s because forms have a special type of error, which is called non-field errors. It’s a collection of errors that are not related to a specific field. Let’s refactor the form.html partial template to display those errors as well:

Navigate to templates/includes/form.html

Currently it has

ubuntu@ip-172-31-11-178:~/basedir$ cat templates/includes/form.html 
{% load widget_tweaks %}


{% for field in form %}
  <div class="form-group">
    {{ field.label_tag }}
    <br>
    {{ field }}
        
    {% if field.help_text %}
      <small class="form-text text-muted">
        {{ field.help_text|safe }}
      </small>
    {% endif %}
  </div>
{% endfor %}


We must add:

{% load widget_tweaks %}

{% if form.non_field_errors %}
  <div class="alert alert-danger" role="alert">
    {% for error in form.non_field_errors %}
      <p{% if forloop.last %} class="mb-0"{% endif %}>{{ error }}</p>
    {% endfor %}
  </div>
{% endif %}

{% for field in form %}
  <!-- code suppressed -->
{% endfor %}

Not working completely!

Creating Custom Template Tags

Inside the boards app, create a new folder named templatetags. Then inside this folder, create two empty files named __init__.py and form_tags.py.

(venv) ubuntu@ip-172-31-11-178:~/basedir$ mkdir boards/templatetags

(venv) ubuntu@ip-172-31-11-178:~/basedir$ touch boards/templatetags/__init__.py
(venv) ubuntu@ip-172-31-11-178:~/basedir$ touch boards/templatetags/form_tags.py

├── templatetags
│   ├── __init__.py
│   └── form_tags.py


boards/templatetags/form_tags.py

from django import template

register = template.Library()

@register.filter
def field_type(bound_field):
    return bound_field.field.widget.__class__.__name__

@register.filter
def input_class(bound_field):
    css_class = ''
    if bound_field.form.is_bound:
        if bound_field.errors:
            css_class = 'is-invalid'
        elif field_type(bound_field) != 'PasswordInput':
            css_class = 'is-valid'
    return 'form-control {}'.format(css_class)


templates/includes/form.html again

{% load form_tags widget_tweaks %}

{% if form.non_field_errors %}
  <div class="alert alert-danger" role="alert">
    {% for error in form.non_field_errors %}
      <p{% if forloop.last %} class="mb-0"{% endif %}>{{ error }}</p>
    {% endfor %}
  </div>
{% endif %}

{% for field in form %}
  <div class="form-group">
    {{ field.label_tag }}
    {% render_field field class=field|input_class %}
    {% for error in field.errors %}
      <div class="invalid-feedback">
        {{ error }}
      </div>
    {% endfor %}
    {% if field.help_text %}
      <small class="form-text text-muted">
        {{ field.help_text|safe }}
      </small>
    {% endif %}
  </div>
{% endfor %}

Works!

NEXT: Password Reset

### June 30th

Update, Upgrade, Reboot

ssh djangoboards

We can log in and log out as MarySmith
with qwerty_12345


How do we change user password?

Typically we use e-mail as the authentication tool

Console Email Backend

Edit the settings.py module and add the EMAIL_BACKEND variable to the end of the file:

myproject/settings.py

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

Configuring the Routes

Change myproject/urls.py

url(r'^reset/$',
    auth_views.PasswordResetView.as_view(
        template_name='password_reset.html',
        email_template_name='password_reset_email.html',
        subject_template_name='password_reset_subject.txt'
    ),
    name='password_reset'),
url(r'^reset/done/$',
    auth_views.PasswordResetDoneView.as_view(template_name='password_reset_done.html'),
    name='password_reset_done'),
url(r'^reset/(?P<uidb64>[0-9A-Za-z_\-]+)/(?P<token>[0-9A-Za-z]{1,13}-[0-9A-Za-z]{1,20})/$',
    auth_views.PasswordResetConfirmView.as_view(template_name='password_reset_confirm.html'),
    name='password_reset_confirm'),
url(r'^reset/complete/$',
    auth_views.PasswordResetCompleteView.as_view(template_name='password_reset_complete.html'),
    name='password_reset_complete'),



Inside the templates folder, the following template files:

password_reset.html
password_reset_email.html: this template is the body of the email message sent to the user
password_reset_subject.txt: this template is the subject line of the email, it should be a single line file
password_reset_done.html
password_reset_confirm.html
password_reset_complete.html

Password Reset View
templates/password_reset.html

{% extends 'base_accounts.html' %}

{% block title %}Reset your password{% endblock %}

{% block content %}
  <div class="row justify-content-center">
    <div class="col-lg-4 col-md-6 col-sm-8">
      <div class="card">
        <div class="card-body">
          <h3 class="card-title">Reset your password</h3>
          <p>Enter your email address and we will send you a link to reset your password.</p>
          <form method="post" novalidate>
            {% csrf_token %}
            {% include 'includes/form.html' %}
            <button type="submit" class="btn btn-primary btn-block">Send password reset email</button>
          </form>
        </div>
      </div>
    </div>
  </div>
{% endblock %}

base_accounts.html --- wrong name????

templates/password_reset_subject.txt

[Django Boards] Please reset your password

templates/password_reset_email.html

Hi there,

Someone asked for a password reset for the email address {{ email }}.
Follow the link below:
{{ protocol }}://{{ domain }}{% url 'password_reset_confirm' uidb64=uid token=token %}

In case you forgot your Django Boards username: {{ user.username }}

If clicking the link above doesn't work, please copy and paste the URL
in a new browser window instead.

If you've received this mail in error, it's likely that another user entered
your email address by mistake while trying to reset a password. If you didn't
initiate the request, you don't need to take any further action and can safely
disregard this email.

Thanks,

The Django Boards Team

Password Reset Done View

templates/password_reset_done.html

{% extends 'base_accounts.html' %}

{% block title %}Reset your password{% endblock %}

{% block content %}
  <div class="row justify-content-center">
    <div class="col-lg-4 col-md-6 col-sm-8">
      <div class="card">
        <div class="card-body">
          <h3 class="card-title">Reset your password</h3>
          <p>Check your email for a link to reset your password. If it doesn't appear within a few minutes, check your spam folder.</p>
          <a href="{% url 'login' %}" class="btn btn-secondary btn-block">Return to log in</a>
        </div>
      </div>
    </div>
  </div>
{% endblock %}


Password Reset Confirm View

templates/password_reset_confirm.html

{% extends 'base_accounts.html' %}

{% block title %}
  {% if validlink %}
    Change password for {{ form.user.username }}
  {% else %}
    Reset your password
  {% endif %}
{% endblock %}

{% block content %}
  <div class="row justify-content-center">
    <div class="col-lg-6 col-md-8 col-sm-10">
      <div class="card">
        <div class="card-body">
          {% if validlink %}
            <h3 class="card-title">Change password for @{{ form.user.username }}</h3>
            <form method="post" novalidate>
              {% csrf_token %}
              {% include 'includes/form.html' %}
              <button type="submit" class="btn btn-success btn-block">Change password</button>
            </form>
          {% else %}
            <h3 class="card-title">Reset your password</h3>
            <div class="alert alert-danger" role="alert">
              It looks like you clicked on an invalid password reset link. Please try again.
            </div>
            <a href="{% url 'password_reset' %}" class="btn btn-secondary btn-block">Request a new password reset link</a>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
{% endblock %}


Password Reset Complete View

templates/password_reset_complete.html

{% extends 'base_accounts.html' %}

{% block title %}Password changed!{% endblock %}

{% block content %}
  <div class="row justify-content-center">
    <div class="col-lg-6 col-md-8 col-sm-10">
      <div class="card">
        <div class="card-body">
          <h3 class="card-title">Password changed!</h3>
          <div class="alert alert-success" role="alert">
            You have successfully changed your password! You may now proceed to log in.
          </div>
          <a href="{% url 'login' %}" class="btn btn-secondary btn-block">Return to log in</a>
        </div>
      </div>
    </div>
  </div>
{% endblock %}


NoReverseMatch at /reset/
Reverse for 'password_reset_confirm' with keyword arguments '{'uidb64': 'MTU', 'token': 'bqltux-9c28902cdaade3a50aaf7443cd2cf373'}' not found. 1 pattern(s) tried: ['reset/(?P<uidb64>[0-9A-Za-z_\\-]+)/(?P<token>[0-9A-Za-z]{1,13}-[0-9A-Za-z]{1,20})/$']


We can log in and log out as MarySmith
with qwerty_12345
msmyth@gmail.com


### July 7th

### July 9th



Protecting Views
https://simpleisbetterthancomplex.com/series/2017/10/02/a-complete-beginners-guide-to-django-part-5.html#introduction

Django has a built-in view decorator to avoid that issue

boards/views.py

CURRENTLY

def new_topic(request, pk): ## this function must be updated...
    board = get_object_or_404(Board, pk=pk)
    user = User.objects.first()  # TODO: get the currently logged in user
    if request.method == 'POST':
        form = NewTopicForm(request.POST)
        if form.is_valid():
            topic = form.save(commit=False)
            topic.board = board
            topic.starter = user
            topic.save()
            post = Post.objects.create(
                message=form.cleaned_data.get('message'),
                topic=topic,
                created_by=user
            )
            return redirect('board_topics', pk=board.pk)  # TODO: redirect to the created topic page
    else:
        form = NewTopicForm()
    return render(request, 'new_topic.html', {'board': board, 'form': form})


Decorator must be added

from django.contrib.auth.decorators import login_required

@login_required

http://3.68.85.218:8000/accounts/login/?next=/boards/1/new/

Configuring Login Next Redirect

templates/login.htm

<form method="post" novalidate>
  {% csrf_token %}
  <input type="hidden" name="next" value="{{ next }}">
  {% include 'includes/form.html' %}
  <button type="submit" class="btn btn-primary btn-block">Log in</button>
</form>

^login/$ [name='login']

Must be this
http://3.68.85.218:8000/login/?next=/boards/1/new/

but not this
http://3.68.85.218:8000/accounts/login/?next=/boards/1/new/

Changed urls.py!!

@login_required must be added BEFORE any view function that requires protection from 
unauthorised access


Accessing the Authenticated User
Now we can improve the new_topic view and this time set the proper user, instead of just querying the database and picking the first user. That code was temporary because we had no way to authenticate the user. But now we can do better

boards/views.py must be changed again

@login_required
def new_topic(request, pk):
    board = get_object_or_404(Board, pk=pk)
    if request.method == 'POST':
        form = NewTopicForm(request.POST)
        if form.is_valid():
            topic = form.save(commit=False)
            topic.board = board
            topic.starter = request.user  # <- here !!!!!!!!!!!!!
            topic.save()
            Post.objects.create(
                message=form.cleaned_data.get('message'),
                topic=topic,
                created_by=request.user  # <- and here !!!!!!!!!!!!
            )
            return redirect('board_topics', pk=board.pk)  # TODO: redirect to the created topic page
    else:
        form = NewTopicForm()
    return render(request, 'new_topic.html', {'board': board, 'form': form})


TWO important things done:

1. Views are protected from unauthorised users. You are not permitted to see anything if you are not logged in!
2. If you post a new message, it will be reqistered in YOUR name, no longer in admin name


Topic Posts View

myproject/urls.py


url(r'^boards/(?P<pk>\d+)/topics/(?P<topic_pk>\d+)/$', views.topic_posts, name='topic_posts'),


re_path(r'^boards/(?P<pk>\d+)/topics/(?P<topic_pk>\d+)/$', views.topic_posts, name='topic_posts'),

To this, we will need a new view function and a new HTML page


boards/views.py

from .models import Topic

def topic_posts(request, pk, topic_pk):
    topic = get_object_or_404(Topic, board__pk=pk, pk=topic_pk)
    return render(request, 'topic_posts.html', {'topic': topic})


templates/topic_posts.html

{% extends 'base.html' %}

{% block title %}{{ topic.subject }}{% endblock %}

{% block breadcrumb %}
  <li class="breadcrumb-item"><a href="{% url 'home' %}">Boards</a></li>
  <li class="breadcrumb-item"><a href="{% url 'board_topics' topic.board.pk %}">{{ topic.board.name }}</a></li>
  <li class="breadcrumb-item active">{{ topic.subject }}</li>
{% endblock %}

{% block content %}

{% endblock %}

Inside the topic_posts.html, we can create a for loop iterating over the topic posts


{% extends 'base.html' %}

{% load static %}

{% block title %}{{ topic.subject }}{% endblock %}

{% block breadcrumb %}
  <li class="breadcrumb-item"><a href="{% url 'home' %}">Boards</a></li>
  <li class="breadcrumb-item"><a href="{% url 'board_topics' topic.board.pk %}">{{ topic.board.name }}</a></li>
  <li class="breadcrumb-item active">{{ topic.subject }}</li>
{% endblock %}

{% block content %}

  <div class="mb-4">
    <a href="#" class="btn btn-primary" role="button">Reply</a>
  </div>

  {% for post in topic.posts.all %}
    <div class="card mb-2">
      <div class="card-body p-3">
        <div class="row">
          <div class="col-2">
            <img src="{% static 'img/avatar.svg' %}" alt="{{ post.created_by.username }}" class="w-100">
            <small>Posts: {{ post.created_by.posts.count }}</small>
          </div>
          <div class="col-10">
            <div class="row mb-3">
              <div class="col-6">
                <strong class="text-muted">{{ post.created_by.username }}</strong>
              </div>
              <div class="col-6 text-right">
                <small class="text-muted">{{ post.created_at }}</small>
              </div>
            </div>
            {{ post.message }}
            {% if post.created_by == user %}
              <div class="mt-3">
                <a href="#" class="btn btn-primary btn-sm" role="button">Edit</a>
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  {% endfor %}

{% endblock %}


http://3.68.85.218:8000/boards/2/topics/31/

http://3.68.85.218:8000/boards/1/topics/29/

To address a specific topic, we must know:
1. Id of the board, to which it belongs
2. The topic ID

Topic IDs are assigned in series through the entire blog
not separately within each board

Look into the sqlite database

select * from boards_post;

20|A new message from the new user|2023-05-12 10:32:51.616860||1|20|
21|test|2023-05-12 10:32:53.046909||1|21|
22|hey|2023-05-12 10:35:12.737832||1|22|
23|New user|2023-05-12 10:36:14.364346||1|23|
24|TestOut|2023-05-12 11:01:37.031936||1|24|
25|A message from a non-authenticated user|2023-07-09 05:08:58.296150||1|25|
26|TEST SundayTEST SundayTEST SundayTEST Sunday|2023-07-09 05:09:31.737801||1|26|
27|TEST SundayTEST SundayTEST SundayTEST Sunday|2023-07-09 05:09:48.201801||1|27|
28|TEST Sunday TEST Sunday|2023-07-09 05:27:47.887047||1|28|
29|POST which requires login|2023-07-09 05:40:04.027964||1|29|
30|I mean it ! Really!|2023-07-09 06:00:20.316104||15|30|
31|am I admin?|2023-07-09 06:00:42.403653||14|31|


select * from boards_topic;

18|---------------|2023-04-14 11:34:06.150490|1|1
19|Django is really cool!|2023-04-14 11:34:32.028710|1|1
20|From new user|2023-05-12 10:32:51.611221|3|1
21|test|2023-05-12 10:32:53.042219|3|1
22|Igor Test|2023-05-12 10:35:12.732917|3|1
23|Hi I am Mary|2023-05-12 10:36:14.359702|3|1
24|TestIn|2023-05-12 11:01:37.027361|3|1
25|July 9th|2023-07-09 05:08:58.286245|1|1
26|TEST Sunday|2023-07-09 05:09:31.733275|1|1
27|July 9, 2023, 5:09 a.m.|2023-07-09 05:09:48.197258|1|1
28|TEST Sunday TEST Sunday|2023-07-09 05:27:47.882186|1|1
29|POST which requires login|2023-07-09 05:40:04.023097|1|1
30|Python and Django are great|2023-07-09 06:00:20.311023|2|15
31|am I admin?|2023-07-09 06:00:42.398197|2|14

31 - topic ID, 2 - board ID, 14 - user ID


Placing an avatar
scp circle_face_human_profile_icon.png djangoboards:/home/ubuntu/basedir/

https://www.iconfinder.com/search?q=user&license=2&price=free

Now we can see all replies (if any!) for any post!

NEXT Reply Post View


## July 14th

http://3.68.85.218:8000/boards/2/topics/31/

select * from boards_topic;
.....
29|POST which requires login|2023-07-09 05:40:04.023097|1|1
30|Python and Django are great|2023-07-09 06:00:20.311023|2|15
31|am I admin?|2023-07-09 06:00:42.398197|2|14
32|July 14th today|2023-07-14 10:16:59.780004|2|15


select * from boards_post;

.....
29|POST which requires login|2023-07-09 05:40:04.027964||1|29|
30|I mean it ! Really!|2023-07-09 06:00:20.316104||15|30|
31|am I admin?|2023-07-09 06:00:42.403653||14|31|
32|And we are starting a new session...|2023-07-14 10:16:59.785327||15|32|


Reply Post View
Let’s implement now the reply post view so that we can add more data and progress with the implementation and tests.

myproject/urls.py

url(r'^boards/(?P<pk>\d+)/topics/(?P<topic_pk>\d+)/reply/$', views.reply_topic, name='reply_topic'),

re_path(r'^boards/(?P<pk>\d+)/topics/(?P<topic_pk>\d+)/reply/$', views.reply_topic, name='reply_topic'),

boards/forms.py

Currently has

from django import forms
from boards.models import Topic

class NewTopicForm(forms.ModelForm):
    message = forms.CharField(
        widget=forms.Textarea(
            attrs={'rows': 5, 'placeholder': 'What is on your mind?'}
        ),
        max_length=4000,
        help_text='The max length of the text is 4000.'
    )

    class Meta:
        model = Topic
        fields = ['subject', 'message']


This must be added:

from boards.models import Post

class PostForm(forms.ModelForm):
    class Meta:
        model = Post
        fields = ['message', ]


A new view function is neccessary:
boards/views.py

from .forms import PostForm
from .models import Topic

@login_required
def reply_topic(request, pk, topic_pk):
    topic = get_object_or_404(Topic, board__pk=pk, pk=topic_pk)
    if request.method == 'POST':
        form = PostForm(request.POST)
        if form.is_valid():
            post = form.save(commit=False)
            post.topic = topic
            post.created_by = request.user
            post.save()
            return redirect('topic_posts', pk=pk, topic_pk=topic_pk)
    else:
        form = PostForm()
    return render(request, 'reply_topic.html', {'topic': topic, 'form': form})


One view function must be modified:


@login_required
def new_topic(request, pk):
    board = get_object_or_404(Board, pk=pk)
    if request.method == 'POST':
        form = NewTopicForm(request.POST)
        if form.is_valid():
            topic = form.save(commit=False)
            # code suppressed ...
            return redirect('topic_posts', pk=pk, topic_pk=topic.pk)  # <- here
    # code suppressed ...


New HTML
templates/reply_topic.html

{% extends 'base.html' %}

{% load static %}

{% block title %}Post a reply{% endblock %}

{% block breadcrumb %}
  <li class="breadcrumb-item"><a href="{% url 'home' %}">Boards</a></li>
  <li class="breadcrumb-item"><a href="{% url 'board_topics' topic.board.pk %}">{{ topic.board.name }}</a></li>
  <li class="breadcrumb-item"><a href="{% url 'topic_posts' topic.board.pk topic.pk %}">{{ topic.subject }}</a></li>
  <li class="breadcrumb-item active">Post a reply</li>
{% endblock %}

{% block content %}

  <form method="post" class="mb-4">
    {% csrf_token %}
    {% include 'includes/form.html' %}
    <button type="submit" class="btn btn-success">Post a reply</button>
  </form>

  {% for post in topic.posts.all %}
    <div class="card mb-2">
      <div class="card-body p-3">
        <div class="row mb-3">
          <div class="col-6">
            <strong class="text-muted">{{ post.created_by.username }}</strong>
          </div>
          <div class="col-6 text-right">
            <small class="text-muted">{{ post.created_at }}</small>
          </div>
        </div>
        {{ post.message }}
      </div>
    </div>
  {% endfor %}

{% endblock %}


A newly created topic
http://3.68.85.218:8000/boards/3/topics/36/

templates/topic_posts.html
Can be changed so the original post is clearly distinguishable on the background of the replies

{% for post in topic.posts.all %}
  <div class="card mb-2 {% if forloop.first %}border-dark{% endif %}">
    {% if forloop.first %}
      <div class="card-header text-white bg-dark py-2 px-3">{{ topic.subject }}</div>
    {% endif %}
    <div class="card-body p-3">
      <!-- code suppressed -->
    </div>
  </div>
{% endfor %}


QuerySets
.....